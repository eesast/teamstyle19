turn_save:

[
units = {}*2  #小兵，key = unit_id, value =(str(unit.Solider_Name), unit.HP,(unit.Position.x,unit.Position.y), unit.Flag, unit.Unit_ID) key=编号,value=(名称/类型，血量，位置(x,y)，阵营（1/2），编号)
buildings = {  #建筑（兵种塔，防御塔，资源塔）
            'produce': [],
            'defence': [],
            'resource': []
			#((str(building.BuildingType), building.HP, (building.Position.x,building.Position.y), building.Flag, building.Unit_ID, building.Is_Maintain, building.level),(building.ProducePos.x,building.ProducePos.y))
            #((名称/类型，血量，位置(x,y)，阵营，编号，是否在维修中（1/0），等级),出兵点位置(x,y))
			#理论上来说后面两种建筑是没有这么多属性的……然而在代码实现的时候所有的建筑都是一个类，属性都一样了……所以有些属性数值可能不存在或者怎么地的，这点待调整
        }*2
status = {  #状态，钱的数量，科技等级，建造力
            'money': 0,
            'tech': 0,
            'building': 0,
        }*2
instruments = {
            'attack': [],  #(攻击方id,被攻击方id) 均可能为塔或小兵
            'move': [],    #(移动者id,移动到的位置(x,y))
            'construct': [],  #建造的建筑(建筑(名称/类型，血量，位置(x,y)，阵营，编号，是否在维修中（1/0），等级)，出兵点位置(x,y))
            'maintain': [],   #维修建筑的编号id
            'upgrade': [],    #升级建筑的编号id
            'sell': [],       #出售建筑的编号id
            'update_age': [],  #True/False，代表是否升级科技等级
            'produce': [],    #生产的小兵编号id
            'resource': False  #大部分应该都是True，代表有没有生产资源
        }
]